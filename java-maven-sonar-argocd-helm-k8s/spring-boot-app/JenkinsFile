pipeline {
  agent any

  tools {
    maven 'Maven'   // Make sure this is configured in Jenkins Global Tool Config
    jdk 'Java17'         // Same here
  }

  environment {
    DOCKER_IMAGE = "sivadrgprsd/ultimate-cicd:${BUILD_NUMBER}"
    REGISTRY_CREDENTIALS = credentials('docker-cred') // DockerHub credentials
    GIT_REPO_NAME = "End-To-End"
    GIT_USER_NAME = "sivadrgprsd"
    GITHUB_TOKEN = credentials('github') // GitHub PAT stored in Jenkins
  }

  stages {
    stage('Checkout') {
      steps {
        bat 'git clone https://github.com/%GIT_USER_NAME%/%GIT_REPO_NAME%'
      }
    }

    stage('Build and Test') {
      steps {
        bat 'cd %GIT_REPO_NAME%\\java-maven-sonar-argocd-helm-k8s\\spring-boot-app && mvn clean package'
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        bat "docker build -t %DOCKER_IMAGE% %GIT_REPO_NAME%\\java-maven-sonar-argocd-helm-k8s\\spring-boot-app"
        bat '''
          echo Logging in to DockerHub...
          docker login -u %REGISTRY_CREDENTIALS_USR% -p %REGISTRY_CREDENTIALS_PSW%
          docker push %DOCKER_IMAGE%
        '''
      }
    }

    stage('Update Deployment File') {
      steps {
        bat '''
          cd %GIT_REPO_NAME%
          git config user.email "sivadrgprsd@gmail.com"
          git config user.name "sivadrgprsd"
          powershell -Command "(Get-Content java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml) -replace 'replaceImageTag', '$env:BUILD_NUMBER' | Set-Content java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml"
          git add java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml
          git commit -m \"Update deployment image to version $env:BUILD_NUMBER\"
          git push https://%GITHUB_TOKEN%@github.com/%GIT_USER_NAME%/%GIT_REPO_NAME% HEAD:main
        '''
      }
    }
  }

  post {
    success {
      echo '✅ Pipeline completed successfully!'
    }
    failure {
      echo '❌ Pipeline failed. Check logs for details.'
    }
  }
}
